#+AUTHOR: BuddhiLW
#+STARTUP: latexpreview
#+LATEX_HEADER: \usepackage{amsmath, physics}
#+PROPERTY: header-args:julia :results output :tangle ./DifferentialEquations/diff.jl :mkdirp yes

#+begin_src julia 
  1 + 3
#+end_src

#+RESULTS:
: 4

#+begin_src julia
  print("hello")
#+end_src

#+RESULTS:
: hello

#+begin_src julia
  using ModelingToolkit, OrdinaryDiffEq
  
  @parameters t σ ρ β
  @variables x(t) y(t) z(t)
  D = Differential(t)
  
  eqs = [D(D(x)) ~ σ*(y-x),
         D(y) ~ x*(ρ-z)-y,
         D(z) ~ x*y - β*z]
  
  sys = ODESystem(eqs)
  sys = ode_order_lowering(sys)
  
  u0 = [D(x) => 2.0,
        x => 1.0,
        y => 0.0,
        z => 0.0]
  
  p  = [σ => 28.0,
        ρ => 10.0,
        β => 8/3]
  
  tspan = (0.0,100.0)
  prob = ODEProblem(sys,u0,tspan,p,jac=true)
  sol = solve(prob,Tsit5())
#+end_src

#+RESULTS:
: (0.0, 100.0)


#+begin_src julia :exports both :session
plot(sol,vars=(x,y))
#+end_src

#+RESULTS:

#+BEGIN_SRC ipython :results drawer :session py2session
%matplotlib inline
import numpy as np
import matplotlib.pyplot as plt

fig=plt.figure(facecolor='white')
plt.hist(np.random.randn(500000), bins=100);
#+END_SRC
